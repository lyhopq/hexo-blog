{"meta":{"version":1,"warehouse":"1.0.2"},"models":{"Asset":[{"_id":"themes/modernist/source/js/scale.fix.js","path":"js/scale.fix.js","modified":0},{"_id":"themes/modernist/source/js/moment.min.js","path":"js/moment.min.js","modified":0},{"_id":"themes/modernist/source/js/jquery.imagesloaded.min.js","path":"js/jquery.imagesloaded.min.js","modified":0},{"_id":"themes/modernist/source/js/gallery.js","path":"js/gallery.js","modified":0},{"_id":"themes/modernist/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0},{"_id":"themes/modernist/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0},{"_id":"themes/modernist/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0},{"_id":"themes/modernist/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0},{"_id":"themes/modernist/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0},{"_id":"themes/modernist/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0},{"_id":"themes/modernist/source/css/style.styl","path":"css/style.styl","modified":0},{"_id":"themes/modernist/source/css/images/checker.png","path":"css/images/checker.png","modified":0},{"_id":"themes/modernist/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0},{"_id":"themes/modernist/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0},{"_id":"themes/modernist/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0},{"_id":"themes/modernist/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0},{"_id":"themes/modernist/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0}],"Cache":[{"_id":"source/_posts/C语言结构体对齐算法.md","shasum":"8af0dbd3dbfc1f448d2e24ab20c8772348529f7c","modified":1434760787039},{"_id":"source/_posts/gitignore妙用.md","shasum":"3d409c0d6aaa91818311e0389ccaf1668c9252f3","modified":1434760787039},{"_id":"public/2013/10/23/C语言结构体对齐算法/index.html","modified":1434762604163,"shasum":"0c3c403284a6b4031de5a2640f251f2396e78292"},{"_id":"public/2013/10/20/gitignore妙用/index.html","modified":1434762604174,"shasum":"4f25f61d5d1f1d896f34f40ace6eb21d5aa45ebe"},{"_id":"public/archives/index.html","modified":1434762604187,"shasum":"38b1fba658f1befc3451810cebb8b6dc68eb2dc2"},{"_id":"public/archives/2013/index.html","modified":1434762604196,"shasum":"d0e0e99b24f32a5b56c75562ca89b6f1d73bb791"},{"_id":"public/archives/2013/10/index.html","modified":1434762604204,"shasum":"781a1c706403764801d782c82d51fea2a5f58eb7"},{"_id":"public/index.html","modified":1434762604245,"shasum":"aa000de830143050a3e978d02958e11bf66e3e57"},{"_id":"public/tags/结构体对齐/index.html","modified":1434762604215,"shasum":"69bd34e89fcc7d27846c1d20e83476fbbe03cbd9"},{"_id":"public/tags/算法/index.html","modified":1434762604222,"shasum":"3264ea689f40936e2f0c5a76fe4bc919af33dce8"},{"_id":"public/tags/Git/index.html","modified":1434762604228,"shasum":"22d16c6543c9ad27fd3caf23aed2dc58d1224e22"},{"_id":"public/tags/gitignore/index.html","modified":1434762604235,"shasum":"fd2778ca036e289e3b32a28153f6cbfb934f73a0"},{"_id":"themes/modernist/LICENSE","shasum":"391dd84c2091363936603d63cc71ba1628a13c86","modified":1434762489530},{"_id":"themes/modernist/README.md","shasum":"cf3816c676f356801a90a455db5063c99c165e7a","modified":1434762489530},{"_id":"themes/modernist/_config.yml","shasum":"9981f6e2dac6d22f834f1b6e9315bbb200a487dc","modified":1434762597880},{"_id":"themes/modernist/languages/default.yml","shasum":"bbde9b1c157db32eacfd0eb267a9949d09d592e9","modified":1434762489530},{"_id":"themes/modernist/languages/zh-CN.yml","shasum":"6143ffa6867115ad939881c18d0a0ff1d4e4cb39","modified":1434762489530},{"_id":"themes/modernist/layout/_partial/after-footer.ejs","shasum":"2a56bbb06efe270c94340d340a0ba194166ca11e","modified":1434762489530},{"_id":"themes/modernist/layout/_partial/archive-post.ejs","shasum":"1ff2121a50db007e9f4978134c0d78969505b557","modified":1434762489530},{"_id":"themes/modernist/layout/_partial/archive.ejs","shasum":"6a5cdcefcafafaf6a09251b166658c1063bdc627","modified":1434762489530},{"_id":"themes/modernist/layout/_partial/article.ejs","shasum":"d5a9bff2b555d2f3ff358bfb13d32fc9bca7f0aa","modified":1434762489530},{"_id":"themes/modernist/layout/_partial/comment.ejs","shasum":"c318124752f1919ff15c1bde0816f31ea19cee2b","modified":1434762489533},{"_id":"themes/modernist/layout/_partial/footer.ejs","shasum":"8d185772b250237803fb290fe21d2c4ba7d55125","modified":1434762489533},{"_id":"themes/modernist/layout/_partial/google-analytics.ejs","shasum":"98a27ce8a3d3e4596787b8661efc2a59b182c13a","modified":1434762489533},{"_id":"themes/modernist/layout/_partial/head.ejs","shasum":"68964681d0a5360b88a6aa123e7f30312d1524dd","modified":1434762489533},{"_id":"themes/modernist/layout/_partial/header.ejs","shasum":"db6bb78a9c28f49fa1041e43edd4a119b40446c1","modified":1434762489533},{"_id":"themes/modernist/layout/_partial/pagination.ejs","shasum":"3b19c3790a8e5abc2563bd7874cb32539f9ef40f","modified":1434762489533},{"_id":"themes/modernist/layout/_partial/post/category.ejs","shasum":"53af0ec48fbf2c41f4bd7044a7f1a0d8419a9361","modified":1434762489533},{"_id":"themes/modernist/layout/_partial/post/date.ejs","shasum":"2e103ef24430a40f95c8a220ec3aee1bb0f8c213","modified":1434762489533},{"_id":"themes/modernist/layout/_partial/post/gallery.ejs","shasum":"bd41f384ab7dad35516ce600dfebcd77c308bab9","modified":1434762489533},{"_id":"themes/modernist/layout/_partial/post/tag.ejs","shasum":"1a9dc8f8781a7def8b07445270ef323011b3ce46","modified":1434762489533},{"_id":"themes/modernist/layout/_partial/post/title.ejs","shasum":"cf6347f1a36f851ae7d76b712c9a152041dd428e","modified":1434762489533},{"_id":"themes/modernist/layout/archive.ejs","shasum":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1434762489533},{"_id":"themes/modernist/layout/index.ejs","shasum":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1434762489533},{"_id":"themes/modernist/layout/layout.ejs","shasum":"e9b41be33d7bd8ac08db1b42e6f9a101cbd363b6","modified":1434762489533},{"_id":"themes/modernist/layout/page.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1434762489533},{"_id":"themes/modernist/layout/post.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1434762489533},{"_id":"themes/modernist/layout/tag.ejs","shasum":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1434762489533},{"_id":"themes/modernist/source/css/_base/layout.styl","shasum":"e155c2ca1a8fc79523b30db2ea52b1eb573f06a7","modified":1434762489533},{"_id":"themes/modernist/source/css/_base/variable.styl","shasum":"0b925a57d93ed930eb5c6b10fe61134cf40e291c","modified":1434762489533},{"_id":"themes/modernist/source/css/_partial/archive.styl","shasum":"d2bd94e52f1f12caed77db890a039c7bfe7e0c36","modified":1434762489533},{"_id":"themes/modernist/source/css/_partial/article.styl","shasum":"7738410be69173e5d7599794fbb085baf5f93a5a","modified":1434762489533},{"_id":"themes/modernist/source/css/_partial/comment.styl","shasum":"b8328cdce54bd643b0f0f4d757bffeaaa38c7a56","modified":1434762489533},{"_id":"themes/modernist/source/css/_partial/footer.styl","shasum":"959ddf16adacf7c19b0918adc65c592fc45b44e3","modified":1434762489533},{"_id":"themes/modernist/source/css/_partial/header.styl","shasum":"d18e71fb3120131cd8957db380c7af316a89d033","modified":1434762489533},{"_id":"themes/modernist/source/css/_partial/index.styl","shasum":"5df2ef5d8f6ff83d70a50cc9fa58ed891adc4709","modified":1434762489533},{"_id":"themes/modernist/source/css/_partial/syntax.styl","shasum":"95913e9d5dd94e0148423f6deaa1f7741c5874fe","modified":1434762489533},{"_id":"themes/modernist/source/css/fonts/FontAwesome.otf","shasum":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1434762489533},{"_id":"themes/modernist/source/css/fonts/fontawesome-webfont.eot","shasum":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1434762489536},{"_id":"themes/modernist/source/css/fonts/fontawesome-webfont.woff","shasum":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1434762489540},{"_id":"themes/modernist/source/css/images/checker.png","shasum":"108be8f4c3cfb91ef35050a1120659d946d7ebbc","modified":1434762489540},{"_id":"themes/modernist/source/css/style.styl","shasum":"641c90d96997e5f77faf920e37a3ba42518bdc28","modified":1434762489540},{"_id":"themes/modernist/source/fancybox/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1434762489540},{"_id":"themes/modernist/source/fancybox/fancybox_loading.gif","shasum":"48673ea547f521de42a1a2057df6939cafda7ae5","modified":1434762489540},{"_id":"themes/modernist/source/fancybox/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1434762489540},{"_id":"themes/modernist/source/fancybox/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1434762489540},{"_id":"themes/modernist/source/fancybox/jquery.fancybox.css","shasum":"98644f55b533a25495961ac6fd411ca27807d54d","modified":1434762489540},{"_id":"themes/modernist/source/fancybox/jquery.fancybox.pack.js","shasum":"2629dcc9d237f1244c02de196733830a5723cb90","modified":1434762489540},{"_id":"themes/modernist/source/js/gallery.js","shasum":"e5c7dd04c8992e5c10fc53dc57e57c3fbe2b66c7","modified":1434762489540},{"_id":"themes/modernist/source/js/jquery.imagesloaded.min.js","shasum":"4109837b1f6477bacc6b095a863b1b95b1b3693f","modified":1434762489540},{"_id":"themes/modernist/source/js/moment.min.js","shasum":"764c7d63fed0b42fbf576c816470d81cb937ecd3","modified":1434762489540},{"_id":"themes/modernist/source/js/scale.fix.js","shasum":"bbf62458c63fca2535965f9dfaacfbc6bc697e03","modified":1434762489540},{"_id":"themes/modernist/source/css/fonts/fontawesome-webfont.ttf","shasum":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1434762489540},{"_id":"themes/modernist/source/css/fonts/fontawesome-webfont.svg","shasum":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1434762489536},{"_id":"public/js/scale.fix.js","modified":1434762603269,"shasum":"bbf62458c63fca2535965f9dfaacfbc6bc697e03"},{"_id":"public/js/moment.min.js","modified":1434762603274,"shasum":"764c7d63fed0b42fbf576c816470d81cb937ecd3"},{"_id":"public/js/jquery.imagesloaded.min.js","modified":1434762603276,"shasum":"4109837b1f6477bacc6b095a863b1b95b1b3693f"},{"_id":"public/js/gallery.js","modified":1434762603278,"shasum":"e5c7dd04c8992e5c10fc53dc57e57c3fbe2b66c7"},{"_id":"public/fancybox/jquery.fancybox.pack.js","modified":1434762603282,"shasum":"2629dcc9d237f1244c02de196733830a5723cb90"},{"_id":"public/fancybox/jquery.fancybox.css","modified":1434762603284,"shasum":"98644f55b533a25495961ac6fd411ca27807d54d"},{"_id":"public/fancybox/fancybox_sprite.png","modified":1434762603288,"shasum":"17df19f97628e77be09c352bf27425faea248251"},{"_id":"public/fancybox/fancybox_overlay.png","modified":1434762603292,"shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0"},{"_id":"public/fancybox/fancybox_loading.gif","modified":1434762603295,"shasum":"48673ea547f521de42a1a2057df6939cafda7ae5"},{"_id":"public/fancybox/blank.gif","modified":1434762603296,"shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a"},{"_id":"public/css/style.css","modified":1434762603946,"shasum":"6fe961c17185bee9d34fee4107944fb3e98925e7"},{"_id":"public/css/images/checker.png","modified":1434762604101,"shasum":"108be8f4c3cfb91ef35050a1120659d946d7ebbc"},{"_id":"public/css/fonts/fontawesome-webfont.woff","modified":1434762604103,"shasum":"04c3bf56d87a0828935bd6b4aee859995f321693"},{"_id":"public/css/fonts/fontawesome-webfont.ttf","modified":1434762604106,"shasum":"7f09c97f333917034ad08fa7295e916c9f72fd3f"},{"_id":"public/css/fonts/fontawesome-webfont.svg","modified":1434762604111,"shasum":"46fcc0194d75a0ddac0a038aee41b23456784814"},{"_id":"public/css/fonts/fontawesome-webfont.eot","modified":1434762604113,"shasum":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e"},{"_id":"public/css/fonts/FontAwesome.otf","modified":1434762604116,"shasum":"b5b4f9be85f91f10799e87a083da1d050f842734"}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"C语言结构体对齐算法","date":"2013-10-23T07:20:16.000Z","_content":"\n最近做了一个关于结构体补齐填充的东西，补了一下关于结构体对齐方面的知识（以前也研究过，不过都忘了，所以在这记录一下）。\n\n\n首先看一下结构体对齐的三个概念值： \n\n1\t数据类型的*默认对齐值*（自身对齐）\n  * 基本数据类型：为指定平台上基本类型的长度。如在32位机器中，char对齐值为1，short为2，int,float为4，double为8；\n  * 结构体：其数据成员中默认对齐值最大的那个值。\n    \n2\t*指定对齐值*：#pragma pack (value)时的指定对齐值value。 \n3\t数据类型的*有效对齐值*：默认对齐值和指定对齐值中小的那个值。\n\n有了这些值，我们就可以很方便的来讨论具体数据结构的成员和其自身的对齐方式。有效对齐值N是最终用来决定数据存放地址方式的值，最重要。有效对齐N，就是表示“对齐在N上”，也就是说该数据的`偏移量`%N=0”。而数据结构中的数据变量都是按定义的先后顺序来排放的。第一个数据变量的起始地址就是数据结构的起始地址。结构体的成员变量要对齐排放（对于非对齐成员需要在其前面填充一些字节，保证其在对齐位置上），结构体本身也要根据自身的有效对齐值圆整(就是结`构体总长度`需要是结构体有效对齐值的整数倍)。\n\n通过上面的分析，对结构体进行字节对齐，我们需要知道四个值：\n1\t指定对齐值：代码中指定的对齐值，记为packLen；\n2\t默认对齐值：结构体中每个数据成员及结构体本身都有默认对齐值，记为defaultLen；\n3\t成员偏移量：即相对于结构体起始位置的长度，记为offset；\n4\t成员长度：结构体中每个数据成员的长度（注结构体成员为补齐之后的长度），记为memberLen。\n\n及两个规则：\n1\t对齐规则：`offset % vaildLen = 0`，其中vaildLen为有效对齐值`vaildLen = min(packLen, defaultLen)`；\n2\t填充规则：如成员变量不遵守对齐规则，则需要对其补齐；在其前面填充一些字节保证该成员对齐。需填充的字节数记为padLen：\n\n    ```\n    padLen = getPadLen(offset , defaultLen);\n    \n    int getPadLen(int offsetLen, int defaultLen)\n    {\n        int vaildLen = min(packLen,defaultLen);\n        if(0 == vaildLen || 0 == offsetLen % vaildLen)\n        {\n            return 0;\n        }\n        return vaildLen - (offsetLen % vaildLen);\n    }\n    ```\n     \n\n结构体对齐算法思想：深度优先填充\n1\t先对齐内层结构体；\n2\t对每个数据成员计算其`defaultLen`、`memberLen`和`offset`；\n    a\t在遍历每个数据成员时计算；\n    b\t对于基本数据类型成员`defaultLen=memberLen`；对于结构体成员`defaultLen`等于它的所有成员的最大的`memberLen`；\n    c\t遍历时对成员的`memberLen`进行累加，得到当前成员的`offsetLen`；\n3\t运用对齐及填充规则：在当前结构体成员前填充padLen个字节；\n","source":"_posts/C语言结构体对齐算法.md","raw":"title: C语言结构体对齐算法\ndate: 2013-10-23 15:20:16\ntags: [结构体对齐,算法]\n\n---\n\n最近做了一个关于结构体补齐填充的东西，补了一下关于结构体对齐方面的知识（以前也研究过，不过都忘了，所以在这记录一下）。\n\n\n首先看一下结构体对齐的三个概念值： \n\n1\t数据类型的*默认对齐值*（自身对齐）\n  * 基本数据类型：为指定平台上基本类型的长度。如在32位机器中，char对齐值为1，short为2，int,float为4，double为8；\n  * 结构体：其数据成员中默认对齐值最大的那个值。\n    \n2\t*指定对齐值*：#pragma pack (value)时的指定对齐值value。 \n3\t数据类型的*有效对齐值*：默认对齐值和指定对齐值中小的那个值。\n\n有了这些值，我们就可以很方便的来讨论具体数据结构的成员和其自身的对齐方式。有效对齐值N是最终用来决定数据存放地址方式的值，最重要。有效对齐N，就是表示“对齐在N上”，也就是说该数据的`偏移量`%N=0”。而数据结构中的数据变量都是按定义的先后顺序来排放的。第一个数据变量的起始地址就是数据结构的起始地址。结构体的成员变量要对齐排放（对于非对齐成员需要在其前面填充一些字节，保证其在对齐位置上），结构体本身也要根据自身的有效对齐值圆整(就是结`构体总长度`需要是结构体有效对齐值的整数倍)。\n\n通过上面的分析，对结构体进行字节对齐，我们需要知道四个值：\n1\t指定对齐值：代码中指定的对齐值，记为packLen；\n2\t默认对齐值：结构体中每个数据成员及结构体本身都有默认对齐值，记为defaultLen；\n3\t成员偏移量：即相对于结构体起始位置的长度，记为offset；\n4\t成员长度：结构体中每个数据成员的长度（注结构体成员为补齐之后的长度），记为memberLen。\n\n及两个规则：\n1\t对齐规则：`offset % vaildLen = 0`，其中vaildLen为有效对齐值`vaildLen = min(packLen, defaultLen)`；\n2\t填充规则：如成员变量不遵守对齐规则，则需要对其补齐；在其前面填充一些字节保证该成员对齐。需填充的字节数记为padLen：\n\n    ```\n    padLen = getPadLen(offset , defaultLen);\n    \n    int getPadLen(int offsetLen, int defaultLen)\n    {\n        int vaildLen = min(packLen,defaultLen);\n        if(0 == vaildLen || 0 == offsetLen % vaildLen)\n        {\n            return 0;\n        }\n        return vaildLen - (offsetLen % vaildLen);\n    }\n    ```\n     \n\n结构体对齐算法思想：深度优先填充\n1\t先对齐内层结构体；\n2\t对每个数据成员计算其`defaultLen`、`memberLen`和`offset`；\n    a\t在遍历每个数据成员时计算；\n    b\t对于基本数据类型成员`defaultLen=memberLen`；对于结构体成员`defaultLen`等于它的所有成员的最大的`memberLen`；\n    c\t遍历时对成员的`memberLen`进行累加，得到当前成员的`offsetLen`；\n3\t运用对齐及填充规则：在当前结构体成员前填充padLen个字节；\n","slug":"C语言结构体对齐算法","published":1,"updated":"2015-06-20T00:39:47.039Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cib4bnl4j0000ay9gkx5i0iy8"},{"title":"gitignore妙用","date":"2013-10-20T07:20:16.000Z","_content":"\n使用Git的同学都知道`.gitignore` 配置文件用于配置不需要加入版本管理的文件，对版本管理带来很大的便利。今天有个需求就是忽略版本库下除少数几个文件和文件夹之外的所有文件，首先想到的方式是使用gitignore树的概念，即在需要的文件夹下都添加`.gitignore`文件，并在其中设定相应的规则。但是，这种方式比较麻烦。\n\n好好研究了一下`gitignore`的语法，知道了`.gitignore`文件过滤有两种模式：开放模式和保守模式。\n\n1. 开放模式负责设置过滤哪些文件和文件夹\n\n    例如： \n    \n    /target/ 表示项目根目录下的target文件夹里面所有的内容都会被过滤，不被跟踪\n    .classpath 表示项目根目录下的.classpath文件会被过滤，不被跟踪\n \n2. 保守模式负责设置哪些文件不被过滤，也就是哪些文件要被跟踪\n\n    例如：\n\n    !/target/*.h 表示target文件夹目录下所有的.h文件将被跟踪\n  \n\n还有就是，`gitignore`是从上到下逐行匹配的，因此`.gitignore`文件的编写原则就是：\n\n> 先编写开放模式，在编写保守模式\n\n要不然，开放模式的规则会把保守模式的规则给覆盖了。\n\n下面附上我的`.gitignore`文件的示例：\n\n```\n/*\n!.gitignore\n!/posts/\n```\n\n只跟踪版本库中的`.gitignore`文件和`posts`目录。这里需要注意的是：\n\n> 一定是`/\\*`而不是`\\*`，`/\\*`表示当前目录下的所有文件，而不是所有文件`\\*`；（这是我自己的理解，不知道对不对！）\n\n下面附上`gitignore`的简单语法：\n\n> 以斜杠“/”开头表目录\n\n> 以星号“*”通配多字符\n\n> 以问号“?”通配单字符\n\n> 以方括号“[]”包含单个字符的匹列表\n\n> 以叹号“!”对匹配结果反\n\n","source":"_posts/gitignore妙用.md","raw":"---\ntitle: gitignore妙用\ndate: 2013-10-20 15:20:16\n\ntags: [Git,gitignore]\n\n---\n\n使用Git的同学都知道`.gitignore` 配置文件用于配置不需要加入版本管理的文件，对版本管理带来很大的便利。今天有个需求就是忽略版本库下除少数几个文件和文件夹之外的所有文件，首先想到的方式是使用gitignore树的概念，即在需要的文件夹下都添加`.gitignore`文件，并在其中设定相应的规则。但是，这种方式比较麻烦。\n\n好好研究了一下`gitignore`的语法，知道了`.gitignore`文件过滤有两种模式：开放模式和保守模式。\n\n1. 开放模式负责设置过滤哪些文件和文件夹\n\n    例如： \n    \n    /target/ 表示项目根目录下的target文件夹里面所有的内容都会被过滤，不被跟踪\n    .classpath 表示项目根目录下的.classpath文件会被过滤，不被跟踪\n \n2. 保守模式负责设置哪些文件不被过滤，也就是哪些文件要被跟踪\n\n    例如：\n\n    !/target/*.h 表示target文件夹目录下所有的.h文件将被跟踪\n  \n\n还有就是，`gitignore`是从上到下逐行匹配的，因此`.gitignore`文件的编写原则就是：\n\n> 先编写开放模式，在编写保守模式\n\n要不然，开放模式的规则会把保守模式的规则给覆盖了。\n\n下面附上我的`.gitignore`文件的示例：\n\n```\n/*\n!.gitignore\n!/posts/\n```\n\n只跟踪版本库中的`.gitignore`文件和`posts`目录。这里需要注意的是：\n\n> 一定是`/\\*`而不是`\\*`，`/\\*`表示当前目录下的所有文件，而不是所有文件`\\*`；（这是我自己的理解，不知道对不对！）\n\n下面附上`gitignore`的简单语法：\n\n> 以斜杠“/”开头表目录\n\n> 以星号“*”通配多字符\n\n> 以问号“?”通配单字符\n\n> 以方括号“[]”包含单个字符的匹列表\n\n> 以叹号“!”对匹配结果反\n\n","slug":"gitignore妙用","published":1,"updated":"2015-06-20T00:39:47.039Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cib4bnl4x0005ay9gz956c6i4"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cib4bnl4j0000ay9gkx5i0iy8","tag_id":"cib4bnl4q0001ay9g9wrn9jpj","_id":"cib4bnl4t0003ay9gghiuezf8"},{"post_id":"cib4bnl4j0000ay9gkx5i0iy8","tag_id":"cib4bnl4s0002ay9g19rt9syh","_id":"cib4bnl4t0004ay9glt9pxkes"},{"post_id":"cib4bnl4x0005ay9gz956c6i4","tag_id":"cib4bnl4z0006ay9gwvg311jv","_id":"cib4bnl500008ay9g18gnv7zq"},{"post_id":"cib4bnl4x0005ay9gz956c6i4","tag_id":"cib4bnl4z0007ay9ggn4d975o","_id":"cib4bnl500009ay9gir1fw6ni"}],"Tag":[{"name":"结构体对齐","_id":"cib4bnl4q0001ay9g9wrn9jpj"},{"name":"算法","_id":"cib4bnl4s0002ay9g19rt9syh"},{"name":"Git","_id":"cib4bnl4z0006ay9gwvg311jv"},{"name":"gitignore","_id":"cib4bnl4z0007ay9ggn4d975o"}]}}