{"meta":{"version":1,"warehouse":"1.0.2"},"models":{"Asset":[{"_id":"themes/modernist/source/js/scale.fix.js","path":"js/scale.fix.js","modified":1},{"_id":"themes/modernist/source/js/moment.min.js","path":"js/moment.min.js","modified":1},{"_id":"themes/modernist/source/js/jquery.imagesloaded.min.js","path":"js/jquery.imagesloaded.min.js","modified":1},{"_id":"themes/modernist/source/js/gallery.js","path":"js/gallery.js","modified":1},{"_id":"themes/modernist/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":1},{"_id":"themes/modernist/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":1},{"_id":"themes/modernist/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":1},{"_id":"themes/modernist/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":1},{"_id":"themes/modernist/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":1},{"_id":"themes/modernist/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":1},{"_id":"themes/modernist/source/css/style.styl","path":"css/style.styl","modified":1},{"_id":"themes/modernist/source/css/images/checker.png","path":"css/images/checker.png","modified":1},{"_id":"themes/modernist/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":1},{"_id":"themes/modernist/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":1},{"_id":"themes/modernist/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":1},{"_id":"themes/modernist/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":1},{"_id":"themes/modernist/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":1}],"Cache":[{"_id":"source/_posts/C语言结构体对齐算法.md","shasum":"914295238591818c5c98a8b148a44dd924b61f17","modified":1434702169000},{"_id":"source/_posts/hello-world.md","shasum":"774b507901d9b17991ace2a70263b6dd6d11999a","modified":1434702169000},{"_id":"themes/modernist/LICENSE","shasum":"391dd84c2091363936603d63cc71ba1628a13c86","modified":1434702169000},{"_id":"themes/modernist/README.md","shasum":"cf3816c676f356801a90a455db5063c99c165e7a","modified":1434702169000},{"_id":"themes/modernist/_config.yml","shasum":"b27f6b3cee229adc7886bd947c6c873fcc0fd7c0","modified":1434702169000},{"_id":"themes/modernist/languages/default.yml","shasum":"bbde9b1c157db32eacfd0eb267a9949d09d592e9","modified":1434702169000},{"_id":"themes/modernist/languages/zh-CN.yml","shasum":"6143ffa6867115ad939881c18d0a0ff1d4e4cb39","modified":1434702169000},{"_id":"themes/modernist/layout/_partial/after-footer.ejs","shasum":"2a56bbb06efe270c94340d340a0ba194166ca11e","modified":1434702169000},{"_id":"themes/modernist/layout/_partial/archive-post.ejs","shasum":"1ff2121a50db007e9f4978134c0d78969505b557","modified":1434702169000},{"_id":"themes/modernist/layout/_partial/archive.ejs","shasum":"6a5cdcefcafafaf6a09251b166658c1063bdc627","modified":1434702169000},{"_id":"themes/modernist/layout/_partial/article.ejs","shasum":"d5a9bff2b555d2f3ff358bfb13d32fc9bca7f0aa","modified":1434702169000},{"_id":"themes/modernist/layout/_partial/comment.ejs","shasum":"c318124752f1919ff15c1bde0816f31ea19cee2b","modified":1434702169000},{"_id":"themes/modernist/layout/_partial/footer.ejs","shasum":"8d185772b250237803fb290fe21d2c4ba7d55125","modified":1434702169000},{"_id":"themes/modernist/layout/_partial/google-analytics.ejs","shasum":"98a27ce8a3d3e4596787b8661efc2a59b182c13a","modified":1434702169000},{"_id":"themes/modernist/layout/_partial/head.ejs","shasum":"68964681d0a5360b88a6aa123e7f30312d1524dd","modified":1434702169000},{"_id":"themes/modernist/layout/_partial/header.ejs","shasum":"db6bb78a9c28f49fa1041e43edd4a119b40446c1","modified":1434702169000},{"_id":"themes/modernist/layout/_partial/pagination.ejs","shasum":"3b19c3790a8e5abc2563bd7874cb32539f9ef40f","modified":1434702169000},{"_id":"themes/modernist/layout/_partial/post/category.ejs","shasum":"53af0ec48fbf2c41f4bd7044a7f1a0d8419a9361","modified":1434702169000},{"_id":"themes/modernist/layout/_partial/post/date.ejs","shasum":"2e103ef24430a40f95c8a220ec3aee1bb0f8c213","modified":1434702169000},{"_id":"themes/modernist/layout/_partial/post/gallery.ejs","shasum":"bd41f384ab7dad35516ce600dfebcd77c308bab9","modified":1434702169000},{"_id":"themes/modernist/layout/_partial/post/tag.ejs","shasum":"1a9dc8f8781a7def8b07445270ef323011b3ce46","modified":1434702169000},{"_id":"themes/modernist/layout/_partial/post/title.ejs","shasum":"cf6347f1a36f851ae7d76b712c9a152041dd428e","modified":1434702169000},{"_id":"themes/modernist/layout/archive.ejs","shasum":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1434702169000},{"_id":"themes/modernist/layout/index.ejs","shasum":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1434702169000},{"_id":"themes/modernist/layout/layout.ejs","shasum":"e9b41be33d7bd8ac08db1b42e6f9a101cbd363b6","modified":1434702169000},{"_id":"themes/modernist/layout/page.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1434702169000},{"_id":"themes/modernist/layout/post.ejs","shasum":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1434702169000},{"_id":"themes/modernist/layout/tag.ejs","shasum":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1434702169000},{"_id":"themes/modernist/source/css/_base/layout.styl","shasum":"e155c2ca1a8fc79523b30db2ea52b1eb573f06a7","modified":1434702169000},{"_id":"themes/modernist/source/css/_base/variable.styl","shasum":"0b925a57d93ed930eb5c6b10fe61134cf40e291c","modified":1434702169000},{"_id":"themes/modernist/source/css/_partial/archive.styl","shasum":"d2bd94e52f1f12caed77db890a039c7bfe7e0c36","modified":1434702169000},{"_id":"themes/modernist/source/css/_partial/article.styl","shasum":"7738410be69173e5d7599794fbb085baf5f93a5a","modified":1434702169000},{"_id":"themes/modernist/source/css/_partial/comment.styl","shasum":"b8328cdce54bd643b0f0f4d757bffeaaa38c7a56","modified":1434702169000},{"_id":"themes/modernist/source/css/_partial/footer.styl","shasum":"959ddf16adacf7c19b0918adc65c592fc45b44e3","modified":1434702169000},{"_id":"themes/modernist/source/css/_partial/header.styl","shasum":"d18e71fb3120131cd8957db380c7af316a89d033","modified":1434702169000},{"_id":"themes/modernist/source/css/_partial/index.styl","shasum":"5df2ef5d8f6ff83d70a50cc9fa58ed891adc4709","modified":1434702169000},{"_id":"themes/modernist/source/css/_partial/syntax.styl","shasum":"95913e9d5dd94e0148423f6deaa1f7741c5874fe","modified":1434702169000},{"_id":"themes/modernist/source/css/fonts/FontAwesome.otf","shasum":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1434702169000},{"_id":"themes/modernist/source/css/fonts/fontawesome-webfont.eot","shasum":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1434702169000},{"_id":"themes/modernist/source/css/fonts/fontawesome-webfont.woff","shasum":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1434702169000},{"_id":"themes/modernist/source/css/images/checker.png","shasum":"108be8f4c3cfb91ef35050a1120659d946d7ebbc","modified":1434702169000},{"_id":"themes/modernist/source/css/style.styl","shasum":"641c90d96997e5f77faf920e37a3ba42518bdc28","modified":1434702169000},{"_id":"themes/modernist/source/fancybox/blank.gif","shasum":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1434702169000},{"_id":"themes/modernist/source/fancybox/fancybox_loading.gif","shasum":"48673ea547f521de42a1a2057df6939cafda7ae5","modified":1434702169000},{"_id":"themes/modernist/source/fancybox/fancybox_overlay.png","shasum":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1434702169000},{"_id":"themes/modernist/source/fancybox/fancybox_sprite.png","shasum":"17df19f97628e77be09c352bf27425faea248251","modified":1434702169000},{"_id":"themes/modernist/source/fancybox/jquery.fancybox.css","shasum":"98644f55b533a25495961ac6fd411ca27807d54d","modified":1434702169000},{"_id":"themes/modernist/source/fancybox/jquery.fancybox.pack.js","shasum":"2629dcc9d237f1244c02de196733830a5723cb90","modified":1434702169000},{"_id":"themes/modernist/source/js/gallery.js","shasum":"e5c7dd04c8992e5c10fc53dc57e57c3fbe2b66c7","modified":1434702169000},{"_id":"themes/modernist/source/js/jquery.imagesloaded.min.js","shasum":"4109837b1f6477bacc6b095a863b1b95b1b3693f","modified":1434702169000},{"_id":"themes/modernist/source/js/moment.min.js","shasum":"764c7d63fed0b42fbf576c816470d81cb937ecd3","modified":1434702169000},{"_id":"themes/modernist/source/js/scale.fix.js","shasum":"bbf62458c63fca2535965f9dfaacfbc6bc697e03","modified":1434702169000},{"_id":"themes/modernist/source/css/fonts/fontawesome-webfont.ttf","shasum":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1434702169000},{"_id":"themes/modernist/source/css/fonts/fontawesome-webfont.svg","shasum":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1434702169000}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"C语言结构体对齐算法","date":"2013-10-23T07:20:16.000Z","_content":"\n最近做了一个关于结构体补齐填充的东西，补了一下关于结构体对齐方面的知识（以前也研究过，不过都忘了，所以在这记录一下）。\n\n\n首先看一下结构体对齐的三个概念值： \n\n1\t数据类型的`默认对齐值`（自身对齐）：\n\n    1\t基本数据类型：为指定平台上基本类型的长度。如在32位机器中，char对齐值为1，short为2，int,float为4，double为8；\n    2\t结构体：其数据成员中默认对齐值最大的那个值。\n    \n2\t`指定对齐值`：#pragma pack (value)时的指定对齐值value。 \n3\t数据类型的`有效对齐值`：默认对齐值和指定对齐值中小的那个值。\n\n有了这些值，我们就可以很方便的来讨论具体数据结构的成员和其自身的对齐方式。有效对齐值N是最终用来决定数据存放地址方式的值，最重要。有效对齐N，就是表示“对齐在N上”，也就是说该数据的`偏移量`%N=0”。而数据结构中的数据变量都是按定义的先后顺序来排放的。第一个数据变量的起始地址就是数据结构的起始地址。结构体的成员变量要对齐排放（对于非对齐成员需要在其前面填充一些字节，保证其在对齐位置上），结构体本身也要根据自身的有效对齐值圆整(就是结`构体总长度`需要是结构体有效对齐值的整数倍)。\n\n通过上面的分析，对结构体进行字节对齐，我们需要知道四个值：\n1\t指定对齐值：代码中指定的对齐值，记为packLen；\n2\t默认对齐值：结构体中每个数据成员及结构体本身都有默认对齐值，记为defaultLen；\n3\t成员偏移量：即相对于结构体起始位置的长度，记为offset；\n4\t成员长度：结构体中每个数据成员的长度（注结构体成员为补齐之后的长度），记为memberLen。\n\n及两个规则：\n1\t对齐规则：`offset % vaildLen = 0`，其中vaildLen为有效对齐值`vaildLen = min(packLen, defaultLen)`；\n2\t填充规则：如成员变量不遵守对齐规则，则需要对其补齐；在其前面填充一些字节保证该成员对齐。需填充的字节数记为padLen：\n\n    ```\n    padLen = getPadLen(offset , defaultLen);\n    \n    int getPadLen(int offsetLen, int defaultLen)\n    {\n        int vaildLen = min(packLen,defaultLen);\n        if(0 == vaildLen || 0 == offsetLen % vaildLen)\n        {\n            return 0;\n        }\n        return vaildLen - (offsetLen % vaildLen);\n    }\n    ```\n     \n\n结构体对齐算法思想：深度优先填充\n1\t先对齐内层结构体；\n2\t对每个数据成员计算其`defaultLen`、`memberLen`和`offset`；\n    a\t在遍历每个数据成员时计算；\n    b\t对于基本数据类型成员`defaultLen=memberLen`；对于结构体成员`defaultLen`等于它的所有成员的最大的`memberLen`；\n    c\t遍历时对成员的`memberLen`进行累加，得到当前成员的`offsetLen`；\n3\t运用对齐及填充规则：在当前结构体成员前填充padLen个字节；\n","source":"_posts/C语言结构体对齐算法.md","raw":"title: C语言结构体对齐算法\ndate: 2013-10-23 15:20:16\ntags: [结构体对齐,算法]\n\n---\n\n最近做了一个关于结构体补齐填充的东西，补了一下关于结构体对齐方面的知识（以前也研究过，不过都忘了，所以在这记录一下）。\n\n\n首先看一下结构体对齐的三个概念值： \n\n1\t数据类型的`默认对齐值`（自身对齐）：\n\n    1\t基本数据类型：为指定平台上基本类型的长度。如在32位机器中，char对齐值为1，short为2，int,float为4，double为8；\n    2\t结构体：其数据成员中默认对齐值最大的那个值。\n    \n2\t`指定对齐值`：#pragma pack (value)时的指定对齐值value。 \n3\t数据类型的`有效对齐值`：默认对齐值和指定对齐值中小的那个值。\n\n有了这些值，我们就可以很方便的来讨论具体数据结构的成员和其自身的对齐方式。有效对齐值N是最终用来决定数据存放地址方式的值，最重要。有效对齐N，就是表示“对齐在N上”，也就是说该数据的`偏移量`%N=0”。而数据结构中的数据变量都是按定义的先后顺序来排放的。第一个数据变量的起始地址就是数据结构的起始地址。结构体的成员变量要对齐排放（对于非对齐成员需要在其前面填充一些字节，保证其在对齐位置上），结构体本身也要根据自身的有效对齐值圆整(就是结`构体总长度`需要是结构体有效对齐值的整数倍)。\n\n通过上面的分析，对结构体进行字节对齐，我们需要知道四个值：\n1\t指定对齐值：代码中指定的对齐值，记为packLen；\n2\t默认对齐值：结构体中每个数据成员及结构体本身都有默认对齐值，记为defaultLen；\n3\t成员偏移量：即相对于结构体起始位置的长度，记为offset；\n4\t成员长度：结构体中每个数据成员的长度（注结构体成员为补齐之后的长度），记为memberLen。\n\n及两个规则：\n1\t对齐规则：`offset % vaildLen = 0`，其中vaildLen为有效对齐值`vaildLen = min(packLen, defaultLen)`；\n2\t填充规则：如成员变量不遵守对齐规则，则需要对其补齐；在其前面填充一些字节保证该成员对齐。需填充的字节数记为padLen：\n\n    ```\n    padLen = getPadLen(offset , defaultLen);\n    \n    int getPadLen(int offsetLen, int defaultLen)\n    {\n        int vaildLen = min(packLen,defaultLen);\n        if(0 == vaildLen || 0 == offsetLen % vaildLen)\n        {\n            return 0;\n        }\n        return vaildLen - (offsetLen % vaildLen);\n    }\n    ```\n     \n\n结构体对齐算法思想：深度优先填充\n1\t先对齐内层结构体；\n2\t对每个数据成员计算其`defaultLen`、`memberLen`和`offset`；\n    a\t在遍历每个数据成员时计算；\n    b\t对于基本数据类型成员`defaultLen=memberLen`；对于结构体成员`defaultLen`等于它的所有成员的最大的`memberLen`；\n    c\t遍历时对成员的`memberLen`进行累加，得到当前成员的`offsetLen`；\n3\t运用对齐及填充规则：在当前结构体成员前填充padLen个字节；\n","slug":"C语言结构体对齐算法","published":1,"updated":"2015-06-19T08:22:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cib3cmtd80000v59glbgbfjo2"},{"title":"Hello World","_content":"Welcome to [Hexo](http://hexo.io/)! This is your very first post. Check [documentation](http://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](http://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](http://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](http://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](http://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](http://hexo.io/docs/deployment.html)\n","source":"_posts/hello-world.md","raw":"title: Hello World\n---\nWelcome to [Hexo](http://hexo.io/)! This is your very first post. Check [documentation](http://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](http://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](http://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](http://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](http://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](http://hexo.io/docs/deployment.html)\n","slug":"hello-world","published":1,"date":"2015-06-19T08:22:49.000Z","updated":"2015-06-19T08:22:49.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cib3cmtdt0005v59g9d942jdj"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cib3cmtd80000v59glbgbfjo2","tag_id":"cib3cmtdb0001v59gxlbs64k9","_id":"cib3cmtdd0003v59gkrmrczx9"},{"post_id":"cib3cmtd80000v59glbgbfjo2","tag_id":"cib3cmtdc0002v59g7rq4qcql","_id":"cib3cmtdd0004v59gqrzxl9d0"}],"Tag":[{"name":"结构体对齐","_id":"cib3cmtdb0001v59gxlbs64k9"},{"name":"算法","_id":"cib3cmtdc0002v59g7rq4qcql"}]}}